#!/usr/bin/env python
from __future__ import print_function
import matplotlib.pyplot as plt
from configparser import ConfigParser
import sys
import fitsio
from py.qsoemission import io, utils, qso, line_models, likelihood, const

if len(sys.argv) != 2:
    print('usage: find_lines config.ini')
    sys.exit(0)

z_file = utils.get_system_values(sys.argv[1], 'input','z_file')
z_dict = io.read_drq(z_file)

method1 = utils.get_system_values(sys.argv[1], 'likelihood method', 'method1')
like = getattr(likelihood, method1)

method2 = utils.get_system_values(sys.argv[1], 'likelihood method', 'method2')
like_new = getattr(likelihood, method2)

model_label = utils.get_system_values(sys.argv[1], 'line model', 'model')
model = getattr(line_models, model_label)

window = utils.get_system_values(sys.argv[1], 'scan', 'window')
window = float(window)

file_to_open= "../../original_files/pix/pix_101.fits"
filename = fitsio.FITS(file_to_open)
qso_id = 480
qso1= qso.qso(filename, qso_id)

z = z_dict[qso1.id]

plt.plot(qso1.wave, qso1.flux)

for l in const.emission_lines:
    
    wa, fl, iv = utils.window(z, qso1.wave, qso1.flux, qso1.ivar, l, window)

    init_pars = {'a' : 1, 'b' : wa.mean(), 'c' : 10, 'd' : 0, 'e' : 0}
    if model_label == 'asym_lorentzian':
        init_pars['c2'] = 10

    mi,_,m,_ = utils.double_minimize(like,like_new, model,wa, fl, iv, **init_pars)
    
    if l == 'Lya':                                
        utils.plot_fit(wa, model, m, 'g', method2)
        utils.plot_fit(wa, model, mi, 'r', method1) 
    else : 
        utils.plot_fit(wa, model, m, 'g', None)
        utils.plot_fit(wa, model, mi, 'r', None)
    
    print("like {} : {}".format(l, utils.get_chi(like_new, model, m, wa, fl, iv)))
    print("chi2 {} : {}".format(l, utils.get_chi(like, model, mi, wa, fl, iv)))
plt.title(model_label)   
plt.legend()
plt.show()
